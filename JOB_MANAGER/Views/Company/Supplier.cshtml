
@{
    ViewBag.Title = "Supplier";
    ViewBag.ActiveMenu = "Supplier";
    ViewBag.MenuOpen = "MyCompany";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col-sm-12 p-2">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb bg-gradient-olive">
                <li class="breadcrumb-item">
                    <a href="@Url.Action("Index", "Home")" class="text-white">
                        <i class="fas fa-tachometer-alt"></i> Dasboard
                    </a>
                    <i class="fas fa-angle-double-right mx-2" aria-hidden="true"></i>
                </li>
                <li class="breadcrumb-item">
                    <a href="#" class="text-white">
                        <i class="nav-icon fas fa-home"></i> Company
                    </a>
                    <i class="fas fa-angle-double-right mx-2" aria-hidden="true"></i>
                </li>
                <li class="breadcrumb-item active"><i class="far fa-star text-white" aria-hidden="true"></i>Supplier</li>
            </ol>
        </nav>
    </div>

    <div class="col-sm-12 col-xs-12">
        <div class="card card-cyan card-outline" id="ListSupplier">
            <div class="card-header">
                <label><i class="fas fa-list text-cyan"></i> List Of Supplier</label>
                <div class="card-tools">
                    <button type="button" class="btn btn-tool" data-card-widget="collapse">
                        <i class="fas fa-minus"></i>
                    </button>
                </div>
            </div>
            <div class="card-body active spinner SupplierGrid p-1" style="display: block;">

            </div>
        </div>
    </div>

    <div class="col-sm-12 col-xs-12">
        <div id="card edit-Supplier">
            <div class="card card-info displaynone" id="EditOrCreateSup">
                <div class="card-header">
                    <h3 class="card-title">Supplier Inf.</h3>
                    <div class="card-tools">
                        <button type="button" class="btn btn-tool" data-card-widget="collapse">
                            <i class="fas fa-minus"></i>
                        </button>
                        <button type="button" class="btn btn-tool" title="Reset" OnClick="FormReset($('#FormReset'))">
                            <i class="fas fa-sync-alt"></i>
                        </button>
                        <button type="button" class="btn btn-tool" onclick="ScaleProfile('#EditOrCreateSup')">
                            <i class="fas fa-compress"></i>
                        </button>
                        <button type="button" class="btn btn-tool" onclick="EditProfile('#EditOrCreateSup','#ListSupplier')">
                            <i class="fas fa-times"></i>
                        </button>
                    </div>
                </div>
                <div class="card-body spinercontrol">
                    <form id="FormReset">
                        <div class="row">
                            <div class="col-sm-6">
                                <hr>
                                <div class="form-row">
                                    <label id="lblSup" for="SUPPLIER_NAME" class="col-sm-4 control-label">Supplier</label>
                                    <div class="col-sm-8">
                                        <input type="text" class="form-control form-control-sm" id="SUPPLIER_NAME" name="SUPPLIER_NAME" required data-required-message="Supplier is Required!" />
                                    </div>
                                </div>
                                <hr>
                                <div class="form-row">
                                    <label id="lblSupNbr" for="SUPPLIER_NUMBER" class="col-sm-4 control-label">Supp.#</label>
                                    <div class="col-sm-8">
                                        <input type="text" class="form-control form-control-sm" id="SUPPLIER_NUMBER" name="SUPPLIER_NUMBER" required data-required-message="Supplier Number is Required!" />
                                    </div>
                                </div>
                                <hr>
                                <div class="form-row">
                                    <label id="lblStatus" for="SUPPLIER_STATUS_ID" class="col-sm-4 control-label">Status</label>
                                    <div class="col-sm-8">
                                        @Html.DropDownList("STATUS_ID", ViewBag.STATUS_LIST as SelectList, null, htmlAttributes: new { @class = "form-control form-control-sm selectpicker", @id = "SUPPLIER_STATUS_ID", @name = "SUPPLIER_STATUS_ID", @title = "Select Status", @required = "true" })
                                    </div>
                                </div>
                                <hr>
                                <div class="form-row">
                                    <label id="lblWebUrl" for="SUPPLIER_URL" class="col-sm-4 control-label">Web URL</label>
                                    <div class="col-sm-8">
                                        <div class="input-group input-group-sm">
                                            <div class="input-group-prepend">
                                                <span class="input-group-text"><i class="fas fa-globe"></i></span>
                                            </div>
                                            <input type="text" class="form-control float-right" id="SUPPLIER_URL" name="SUPPLIER_URL">
                                            <div class="input-group-append">
                                                <button class="btn btn-info" type="button" onclick="ShowLink($('#SUPPLIER_URL').val())">GO</button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <hr>
                                <div class="form-row">
                                    <label id="lblPhone" for="SUPPLIER_PHONE" class="col-sm-4 control-label">Phone</label>
                                    <div class="col-sm-8">
                                        <div class="input-group input-group-sm">
                                            <div class="input-group-prepend">
                                                <span class="input-group-text"><i class="fas fa-phone"></i></span>
                                            </div>
                                            <input type="text" class="form-control float-right" id="SUPPLIER_PHONE" name="SUPPLIER_PHONE" data-inputmask='"mask": "(999) 999-9999"' data-mask>
                                        </div>
                                    </div>
                                </div>
                                <hr />
                                <div class="form-row">
                                    <label id="lblEmail" for="SUPPLIER_EMAIL" class="col-sm-4 control-label">Email</label>
                                    <div class="col-sm-8">
                                        <div class="input-group input-group-sm">
                                            <div class="input-group-prepend">
                                                <span class="input-group-text"><i class="fas fa-envelope"></i></span>
                                            </div>
                                            <input type="email" class="form-control float-right" id="SUPPLIER_EMAIL" name="SUPPLIER_EMAIL">
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-6">
                                <hr>
                                <div class="form-row">
                                    <label id="lblCountry" for="SUPPLIER_COUNTRY" class="col-sm-4 control-label">Country</label>
                                    <div class="col-sm-8">
                                        @Html.DropDownList("COUNTRY_ID", ViewBag.COUNTRIES_LIST as SelectList, null, htmlAttributes: new { @class = "form-control form-control-sm selectpicker", @id = "SUPPLIER_COUNTRY", @name = "SUPPLIER_COUNTRY", @title = "Select Company", @required = "true" })
                                    </div>
                                </div>
                                <hr>
                                <div class="form-row">
                                    <label id="lblState" for="SUPPLIER_STATE" class="col-sm-4 control-label">State</label>
                                    <div class="col-sm-8">
                                        @Html.DropDownList("STATE_ID", ViewBag.STATES_LIST as SelectList, null, htmlAttributes: new { @class = "form-control form-control-sm selectpicker", @id = "SUPPLIER_STATE", @name = "SUPPLIER_STATE", @title = "Select State", @required = "true" })
                                    </div>
                                </div>
                                <hr>
                                <div class="form-row">
                                    <label id="lblCity" for="SUPPLIER_CITY" class="col-sm-4 control-label">City</label>
                                    <div class="col-sm-8">
                                        @Html.DropDownList("CITY_ID", ViewBag.CITIES_LIST as SelectList, null, htmlAttributes: new { @class = "form-control form-control-sm selectpicker", @id = "SUPPLIER_CITY", @name = "SUPPLIER_CITY", @title = "Select City", @required = "true" })
                                    </div>
                                </div>
                                <hr>
                                <div class="form-row">
                                    <label id="lblPostCode" for=">POSTAL_CODE" class="col-sm-4 control-label">Post Code</label>
                                    <div class="col-sm-8">
                                        <div class="input-group input-group-sm">
                                            <div class="input-group-prepend">
                                                <span class="input-group-text"><i class="fas fa-envelope"></i></span>
                                            </div>
                                            <input type="text" class="form-control float-right" id="POSTAL_CODE" name="POSTAL_CODE" disabled required data-required-message="Post Code is required">
                                        </div>
                                    </div>
                                </div>
                                <hr>
                                <div class="form-row">
                                    <label id="lblStrettAdres" for="SUPPLIER_ADDRESS" class="col-sm-4 control-label">Address</label>
                                    <div class="col-sm-8">
                                        <textarea class="form-control form-control-sm" rows="3" id="SUPPLIER_ADDRESS" name="SUPPLIER_ADDRESS" required data-required-message="Address is required"></textarea>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
                <div class="card-footer">
                    <input type="hidden" name="SUPPLIER_ID" id="SUPPLIER_ID" />
                    <button class="btn btn-danger btn-sm" onclick="EditProfile('#EditOrCreateSup','#ListSupplier');"><i class="far fa-times-circle"></i> Cancel</button>
                    <button class="btn btn-success btn-sm float-sm-right" onclick="SaveVec()"><i class="far fa-save"></i> Save</button>
                </div>
            </div>
        </div>
    </div>
</div>


<script id="main">

    var SupTable;

    $(document).ready(function () {

        var parameters = localStorage.getItem('Parameters');
        var defMask = "(999) 999-9999";

        if (IsUndefinedOrNullOrEmpty(parameters) == false)
        {
            var objParam = JSON.parse(parameters);
            $.each(objParam.Getlist, function (i, item) {
                if (item.PARAM_NAME == "PHONE_MASK")
                {
                    defMask = item.PARAM_STR;
                }
            });
        }

        var mask = '"mask": "' + defMask + '"';
        $('[data-mask]').attr("data-inputmask", mask).inputmask();


        $("#SUPPLIER_COUNTRY").attr("data-required-message", "Country is requried");
        $("#SUPPLIER_STATE").attr("data-required-message", "State is requried");
        $("#SUPPLIER_CITY").attr("data-required-message", "City is requried");
        $("#SUPPLIER_STATUS_ID").attr("data-required-message", "Status is requried");

        $('.selectpicker').attr("data-live-search", "true");
        $('.selectpicker').selectpicker();
     
        InitGrids();

    });

    function AddGrid(obj) {
        EditProfile('#EditOrCreateSup', '#ListSupplier');
        $("#EditOrCreateSup .card-title").html("<i class='fas fa-plus-circle'></i> Create New Supplier");
        FormReset($('#FormReset'));
    }

    function ChangeGrid(obj) {
        var size = parseInt($(this).val(), 10);
        SupTable.jsGrid("option", "pageSize", size);
    };

    function FormReset(element) {
        element.trigger("reset");

        $('.selectpicker').each(function (index) {
            $(this).selectpicker('refresh');
        });
    }

    function RefreshGrid(obj) {
        SupTable.jsGrid("loadData");
    }

    function SearchGrid(obj)
    {
        $(obj.children).toggleClass('active');
        SupTable.jsGrid("option", "filtering", $(obj.children).hasClass('active'));
    };


    $("#SUPPLIER_COUNTRY").change(function ()
    {
        var param = {};
        param.CountryID = this.value;

        //GetSupAdreesCombo(1, param);
        GetStateListByCompany(param, function ()
        {
        });
    });

    $("#SUPPLIER_STATE").change(function ()
    {
        var param = {};
        param.StateID = this.value;

        GetCityListByState(param, function () {
        });
    });


    function GetStateListByCompany(param,callback)
    {
         $.ajax({
                url: '@Url.Action("GetStateByCompanyID", "Company")',
                data: $.param(param),
                type: 'POST',
                success: function (retdata) {
                    $("#SUPPLIER_STATE").find('option').remove();
                    $('#SUPPLIER_STATE').selectpicker('refresh');

                    $("#SUPPLIER_CITY").find('option').remove();
                    $('#SUPPLIER_CITY').selectpicker('refresh');
                    if (IsUndefinedOrNullOrEmpty(retdata.StateList) == false && retdata.StateList.length > 0)
                    {
                        var StateList = retdata.StateList;
                        for (var i = 0; i < StateList.length; i++) {
                            var option = $('<option></option>').attr("value", StateList[i].STATE_ID).text(StateList[i].STATE_NAME);
                            $("#SUPPLIER_STATE").append(option);

                        }

                        $('#SUPPLIER_STATE').selectpicker('refresh');
                        callback();
                    }
                }
            });
    }

    function GetCityListByState(data, callback)
    {
        var param = {};
        param.StateID = data.StateID;

        $.ajax({
            url: '@Url.Action("GetCityCompanyID", "Company")',
            data: $.param(param),
            type: 'POST',
            success: function (retdata)
            {
                $("#SUPPLIER_CITY").find('option').remove();
                $('#SUPPLIER_CITY').selectpicker('refresh');
                if (IsUndefinedOrNullOrEmpty(retdata.CityList) == false && retdata.CityList.length > 0) {
                    var CityList = retdata.CityList;
                    for (var i = 0; i < CityList.length; i++) {
                        var option = $('<option></option>').attr("value", CityList[i].CITY_ID).attr("alt", CityList[i].POSTAL_CODE).text(CityList[i].CITY_NAME);
                        $("#SUPPLIER_CITY").append(option);
                    }

                    $('#SUPPLIER_CITY').selectpicker('refresh');
                    callback();
                }
            }
        });
    }

    $("#SUPPLIER_CITY").change(function ()
    {
        var PostalCode = $(this).find("option:selected").attr("alt");
        $("#POSTAL_CODE").val(PostalCode);
    });

    function InitGrids()
    {
        CreateHtmlJsGrid("Supplier", function (retHtml)
        {
            $(".SupplierGrid").html(retHtml);

            var Options = {};
            Options.Name = $("#TableSupplier");
            Options.Url = '@Url.Action("GetSupplierList", "Company")';
            Options.Data = [];
            Options.Fields = [
                { name: "SUPPLIER_NUMBER", title: "Supp.#", type: "text", width: 80 },
                {
                    name: "SUPPLIER_NAME", title: "Supplier", type: "text", width: 150,
                    itemTemplate: function (_, item) {

                        item.DISPLAY_CLASS = IsUndefinedOrNullOrEmpty(item.DISPLAY_CLASS) ? "" : item.DISPLAY_CLASS;

                        return $("<span>").text(item.SUPPLIER_NAME + " ").append($("<div class='badge " + item.DISPLAY_CLASS + "'>").html(item.SUPPLIER_STATUS_NAME));
                    }                
                },
                { name: "SUPPLIER_PHONE", title: "Phone", type: "text", width: 150 },
                { name: "SUPPLIER_EMAIL", title: "Email", type: "text", width: 80 },             
                {
                    type: "control",
                    modeSwitchButton: false,
                    editButton: false,
                    width: 60,
                    align: "center",
                    itemTemplate: function (_, item)
                    {
                        var controlCustimoze = "<button type='button' class='btn btn-xs btn-outline-info' style='margin-left: 5px;' title='Edit'  onclick = 'EditSup(" + JSON.stringify(item) + ")'><i class='fas fa-edit'></i></button>";
                        controlCustimoze += "<button type='button' class='btn btn-xs btn-outline-danger'  style='margin-left: 5px;' title='Delete' onclick = 'DeleteSup(" + item.SUPPLIER_ID + ")'><i class='fas fa-trash-alt'></i></button> "

                        return $("<td class='btn-toolbar'>").html(controlCustimoze);
                    }
                }
            ]

            CreateJsGrid(Options, function (retGrid) {
                SupTable = retGrid.Grid;
                SupTable.jsGrid("option", "editing", false);
            });
        });
    }

    function SaveVec()
    {
        var required = $('input,textarea,select').filter('[required]:visible');

        var allRequired = true;
        var param = {};
        required.each(function () {
            if ($(this).val() == '')
            {
                var message = $(this).attr("data-required-message")
                toastr.warning(message, "Warning");
                allRequired = false;
            }
        });

        if (allRequired == false)
            return;
        //var param = $("form").serialize();
        param.SUPPLIER_ID = $("#SUPPLIER_ID").val();
        param.SUPPLIER_NAME = $("#SUPPLIER_NAME").val();
        param.SUPPLIER_NUMBER = $("#SUPPLIER_NUMBER").val();
        param.SUPPLIER_STATUS_ID = $("#SUPPLIER_STATUS_ID").val();
        param.SUPPLIER_URL = $("#SUPPLIER_URL").val();
        param.SUPPLIER_PHONE = $("#SUPPLIER_PHONE").inputmask('unmaskedvalue');
        param.SUPPLIER_EMAIL = $("#SUPPLIER_EMAIL").val();
        param.SUPPLIER_ADDRESS = $("#SUPPLIER_ADDRESS").val();
        param.SUPPLIER_CITY = $("#SUPPLIER_CITY").val();
        param.SUPPLIER_COUNTRY = $("#SUPPLIER_COUNTRY").val();
        param.SUPPLIER_STATE = $("#SUPPLIER_STATE").val();
        param.POSTAL_CODE = $("#POSTAL_CODE").val();

        CreateLoader($('.spinercontrol'), true);
        $.ajax({
            url: '@Url.Action("AddOrUpdateSupplier", "Company")',
            type: 'POST',
            data: $.param(param),
            success: function (retdata) {
            
                if (IsUndefinedOrNullOrEmpty(retdata.Message) == false) {
                    if (retdata.success) {
                        toastr.success(retdata.Message);
                        SupTable.jsGrid("loadData");
                    }
                    else {
                        toastr.error(retdata.Message);
                    }
                }

                CreateLoader($('.spinercontrol'), false);
            },
            error: function (xhr, status, error) {
                toastr.error(xhr.responseText, "Error!");
                CreateLoader($('.spinercontrol'), false);
            }
        });
    }

    function EditSup(SupDto) {
        EditProfile('#EditOrCreateSup', '#ListSupplier');
        $("#EditOrCreateSup .card-title").html("<i class='fas fa-edit'></i> Edit Supplier <b>(" + SupDto.SUPPLIER_NAME + ")</b>");

        var data = {};
        for (var key in SupDto)
        {
            if (SupDto.hasOwnProperty(key))
            {
                var cntrl = $("#" + key + "");
                if (cntrl.is("input:text") || cntrl.is("textarea") || cntrl.is("input:hidden"))
                {
                    cntrl.val(SupDto[key]);
                }
                else
                if (cntrl.is("input:checkbox")) {
                    cntrl.prop("cheked", SupDto[key]);
                }
                else
                if (cntrl.is("select"))
                {
                    if (key == "SUPPLIER_COUNTRY")
                    {
                        data.CountryID = SupDto[key];
                        cntrl.selectpicker('val', SupDto[key]);
                    }
                    else if (key == "SUPPLIER_STATE")
                    {
                        data.StateID = SupDto[key];
                    }
                    else if (key == "SUPPLIER_CITY")
                    {
                        data.CityID = SupDto[key];

                        var param = {};
                        param.CountryID = data.CountryID;
                        GetStateListByCompany(param, function ()
                        {
                            $('#SUPPLIER_STATE').selectpicker('val', data.StateID);
                            GetCityListByState(data, function ()
                            {
                                $('#SUPPLIER_CITY').selectpicker('val', data.CityID);
                            });
                        });
                    }
                    else
                        cntrl.selectpicker('val', SupDto[key]);
                }
            }
        }
    }

    function DeleteSup(SupplierID)
    {
        if (confirm("Are You Sure?") == true)
        {
            CreateLoader($('.spinercontrol'), true);

            var param = {};
            param.SupplierID = SupplierID;

            $.ajax({
            url: '@Url.Action("DeleteSupplier", "Company")',
            type: 'POST',
            data: $.param(param),
            success: function (retdata) {

                if (IsUndefinedOrNullOrEmpty(retdata) == false && retdata.success) {
                    SupTable.jsGrid("loadData");
                }

                if (IsUndefinedOrNullOrEmpty(retdata.Message) == false)
                {
                    if (retdata.success) {
                        toastr.success(retdata.Message);
                    }
                    else {
                        toastr.error(retdata.Message);
                    }
                }
                CreateLoader($('.spinercontrol'), false);
            },
            error: function (xhr, status, error) {
                toastr.error(xhr.responseText, "Error!");
                CreateLoader($('.spinercontrol'), false);
            }
        });
        }
    }

</script>
