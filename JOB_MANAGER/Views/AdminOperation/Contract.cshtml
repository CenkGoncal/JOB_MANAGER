
@{
    ViewBag.Title = "Contract Description";
    ViewBag.ActiveMenu = "Contract";
    ViewBag.MenuOpen = "Genaral";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link href="~/Content/Spinner.css" rel="stylesheet" />


<div class="row">

    <div class="col-sm-12 p-2">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb bg-gradient-olive">
                <li class="breadcrumb-item">
                    <a href="@Url.Action("Index", "Home")" class="text-white">
                        <i class="fas fa-tachometer-alt"></i> Dasboard
                    </a>
                    <i class="fas fa-angle-double-right mx-2" aria-hidden="true"></i>
                </li>
                <li class="breadcrumb-item">
                    <a href="#" class="text-white">
                        <i class="nav-icon fas fa-tools"></i> Administrator
                    </a>
                    <i class="fas fa-angle-double-right mx-2" aria-hidden="true"></i>
                </li>
                <li class="breadcrumb-item">
                    <a href="#" class="text-white">
                        <i class="fas fa-ellipsis-h"></i> General
                    </a>
                    <i class="fas fa-angle-double-right mx-2" aria-hidden="true"></i>
                </li>
                <li class="breadcrumb-item active"><i class="far fa-star text-white" aria-hidden="true"></i>Contact</li>
            </ol>
        </nav>
    </div>
    <div id="body-container" class="col-xs-12">
        <div class="card card-success card-outline card-outline-tabs">
            <div class="card-header p-0 border-bottom-0">
                <ul class="nav nav-tabs" id="ViewTabs" role="tablist">
                    <li class="nav-item">
                        <a class="nav-link active" href="#ContractTypes" data-toggle="pill" role="tab" aria-selected="true">
                            <i class="fas fa-id-badge"></i> Contract Types
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#Roles" data-toggle="pill" role="tab" aria-selected="false">
                            <i class="fas fa-user-tag"></i> Contract Roles
                        </a>
                    </li>
                </ul>
            </div>
            <div class="card-body p-0">
                <div class="tab-content">
                    <div class="tab-pane fade show active" id="ContractTypes" role="tabpanel">
                        <div class="card-body  active spinner TableContractType">
                        </div>
                    </div>
                    <div class="tab-pane fade" id="Roles" role="tabpanel">
                        <div class="card-body  active spinner TableRoles">
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script id="main">

    var t1, t2;

    $(document).ready(function () {

        InitContractType(function () {
            InitRoles(function ()
            {                
            });
        });

    });

    function InitContractType(callback)
    {
        CreateHtmlJsGrid("ContractType", function (retHtml) {
                $(".TableContractType").html(retHtml);

                var Options = {};
                Options.Name = $("#TableContractType");
                Options.Url = "@Url.Action("GetContractTypeList", "AdminOperation")";
                Options.Data = [];
                Options.Fields = [
                     { name: "CONTRACT_TYPE_NAME", title: "Contract Type", type: "text", width: "100", validate: "required" },
                     { name: "CONTRACT_TYPE_CODE", title: "Type Code", type: "text", width: "75", validate: "required" },
                     { name: "CONTRACT_TYPE_DESC", title: "Description", type: "text", width: "100" },
                     { name: "IS_CANCELED", title: "Cancelled", type: "checkbox", width: "50" },
                     {
                        type: "control", modeSwitchButton: false, width: "50", align: "center",
                        itemTemplate: function (_, item) {

                            var $result = jsGrid.fields.control.prototype.itemTemplate.apply(this, arguments);

                            var create = IsUndefinedOrNullOrEmpty(item.CREATION_DATE) ? "" : item.CREATION_DATE;
                            var modified = IsUndefinedOrNullOrEmpty(item.MODIFIED_DATE) ? "" : item.MODIFIED_DATE;
                            var createBy = IsUndefinedOrNullOrEmpty(item.CREATE_BY) ? "@HttpContext.Current.User.Identity.Name" : item.CREATE_BY;

                            var element = "<i class='fas fa-info-circle mx-1' data-toggle='tooltip'  style='font-size: large;' title='Create By:" + createBy + "<br/> Create:" + create + " <br/> Modified:" + modified + "'></i>";

                            return $result.add(element);
                        }

                     }
                ]

                CreateJsGrid(Options, function (retGrid) {
                    t1 = retGrid.Grid;                    
                    callback();
                });

         });
    }

    function InitRoles(callback)
    {
          CreateHtmlJsGrid("Roles", function (retHtml) {
                $(".TableRoles").html(retHtml);

                var Options = {};
                Options.Name = $("#TableRoles");
                Options.Url = "@Url.Action("GetRolesList", "AdminOperation")";
                Options.Data = [];
                Options.Fields = [
                  { name: "ROLE_NAME", title: "Role", type: "text", width: "100", validate: "required" },
                  { name: "IS_CANCELED", title: "Cancelled", type: "checkbox", width: "50" },
                  {
                      type: "control", modeSwitchButton: false, width: "50", align: "center",
                      itemTemplate: function (_, item) {

                          var $result = jsGrid.fields.control.prototype.itemTemplate.apply(this, arguments);

                          var create = IsUndefinedOrNullOrEmpty(item.CREATION_DATE) ? "" : item.CREATION_DATE;
                          var modified = IsUndefinedOrNullOrEmpty(item.MODIFIED_DATE) ? "" : item.MODIFIED_DATE;
                          var createBy = IsUndefinedOrNullOrEmpty(item.CREATE_BY) ? "@HttpContext.Current.User.Identity.Name" : item.CREATE_BY;

                          var element = "<i class='fas fa-info-circle mx-1' data-toggle='tooltip'  style='font-size: large;' title='Create By:" + createBy + "<br/> Create:" + create + " <br/> Modified:" + modified + "'></i>";

                          return $result.add(element);
                      }
                  }
              ];

              CreateJsGrid(Options, function (retGrid) {
                  debugger;
                  t2 = retGrid.Grid;
                  callback();
              });
              
          });
    }


    function OnAddNewItem(args)
    {
        showHideLoader(true);
        var _url;
        var grid;

        var Active = $('#ViewTabs a.active').attr("href");
        if (Active == "#ContractTypes")
        {
            args.item.CONTRACT_TYPE_ID = args.item.CONTRACT_TYPE_ID == null ? -1 : args.item.CONTRACT_TYPE_ID;
            _url = '@Url.Action("AddOrUpdateContractType", "AdminOperation")';
            grid = t1;
        }
        else
        {
            args.item.ROLE_ID = args.item.ROLE_ID == null ? -1 : args.item.ROLE_ID;
            _url = '@Url.Action("AddOrUpdateContractRole", "AdminOperation")';
            grid = t2;
        }

        $.ajax({
            url: _url,
            type: 'POST',
            data: JSON.stringify(args.item),
            contentType: "application/json; charset=utf-8",
            success: function (retdata) {

                if (IsUndefinedOrNullOrEmpty(retdata) == false && retdata.success) {
                    grid.jsGrid("loadData");
                }

                if (IsUndefinedOrNullOrEmpty(retdata.Message) == false) {
                    if (retdata.success) {
                        toastr.success(retdata.Message);
                    }
                    else {
                        toastr.error(retdata.Message);
                    }
                }

                showHideLoader(false);
            }
        });
    }

    function OnDeleteITem(args, type)
    {
        showHideLoader(true);

        var _url;
        var grid;
        var Active = $('#ViewTabs a.active').attr("href");
        if (Active == "#ContractTypes")
        {
            _url = '@Url.Action("RemoveContractType", "AdminOperation")';
            grid = t1;
        }
        else
        {
            _url = '@Url.Action("RemoveRoleType", "AdminOperation")';
            grid = t2;
        }

        $.ajax({
            url: _url,
            type: 'POST',
            data: JSON.stringify(args.item),
            contentType: "application/json; charset=utf-8",
            success: function (retdata) {

                if (IsUndefinedOrNullOrEmpty(retdata) == false && retdata.success)
                {
                    grid.jsGrid("loadData");
                }

                if (IsUndefinedOrNullOrEmpty(retdata.Message) == false) {
                    if (retdata.success) {
                        toastr.success(retdata.Message);
                    }
                    else {
                        toastr.error(retdata.Message);
                    }
                }

                showHideLoader(false);
            }
        });
    }

    function AddGrid(obj) {

        var Active = $('#ViewTabs a.active').attr("href");
        var grid = Active == "#ContractTypes" ? t1 : t2;

        $(obj.children).toggleClass('active');
        grid.jsGrid("option", "inserting", $(obj.children).hasClass('active'));
    };

    function RefreshGrid(obj) {
        var grid = $('#ViewTabs a.active').attr("href") == "#ContractTypes" ? t1 : t2;

        grid.jsGrid("loadData");
    }


    function SearchGrid(obj)
    {
        var Active = $('#ViewTabs a.active').attr("href");        
        var grid = Active == "#ContractTypes" ? t1 : t2;

        $(obj.children).toggleClass('active');
        grid.jsGrid("option", "filtering", $(obj.children).hasClass('active'));
    };

    function ChangeGrid(obj) {

        var href = $('#ViewTabs a.active').attr("href");
        var grid = href == "#ContractTypes" ? t1 : t2;
        var size = parseInt($(href + " #pageSize").val(), 10);
        
        grid.jsGrid("option", "pageSize", size);
    };

</script>