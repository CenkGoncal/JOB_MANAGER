
@{
    ViewBag.Title = "Employee Description";
    ViewBag.ActiveMenu = "Employee";
    ViewBag.MenuOpen = "Genaral";
    Layout = "~/Views/Shared/_Layout.cshtml";

}

<link href="~/Content/Spinner.css" rel="stylesheet" />

<div class="row">

    <div class="col-sm-12 p-2">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb bg-gradient-olive">
                <li class="breadcrumb-item">
                    <a href="@Url.Action("Index", "Home")" class="text-white">
                        <i class="fas fa-tachometer-alt"></i> Dasboard
                    </a>
                    <i class="fas fa-angle-double-right mx-2" aria-hidden="true"></i>
                </li>
                <li class="breadcrumb-item">
                    <a href="#" class="text-white">
                        <i class="nav-icon fas fa-tools"></i> Administrator
                    </a>
                    <i class="fas fa-angle-double-right mx-2" aria-hidden="true"></i>
                </li>
                <li class="breadcrumb-item">
                    <a href="#" class="text-white">
                        <i class="fas fa-ellipsis-h"></i> General
                    </a>
                    <i class="fas fa-angle-double-right mx-2" aria-hidden="true"></i>
                </li>
                <li class="breadcrumb-item active"><i class="far fa-star text-white" aria-hidden="true"></i>Employee</li>
            </ol>
        </nav>
    </div>
    <div id="body-container" class="col-xs-12">        
            <div class="card card-success card-outline card-outline-tabs">                
                    <div class="card-header p-0 border-bottom-0">
                        <ul class="nav nav-tabs" id="ViewTabs" role="tablist">
                            <li class="nav-item">
                                <a class="nav-link active" href="#EmpStatus" data-toggle="pill" role="tab" aria-selected="true">
                                    <i class="fas fa-id-badge"></i> Status
                                </a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" href="#Title" data-toggle="pill" role="tab" aria-selected="true">
                                    <i class="fas fa-user-tag"></i> Title
                                </a>
                            </li>
                        </ul>
                    </div>
                    <div class="card-body p-0">
                        <div class="tab-content">
                            <div class="tab-pane fade show active" id="EmpStatus" role="tabpanel">
                                <div class="card-body active spinner TableEmpStatus">
                                </div>
                            </div>
                            <div class="tab-pane fade" id="Title" role="tabpanel">
                                <div class="card-body active spinner TableTitle">
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    
<script id="main">

    var t1, t2;

    var Classes = [
        { Name: "Primary", Class: "alert-primary",id:1 },
        { Name: "Secondary", Class: "alert-secondary", id:2 },
        { Name: "Success", Class: "alert-success", id:3 },
        { Name: "Danger", Class: "alert-danger", id:4 },
        { Name: "Warning", Class: "alert-warning", id:5 },
        { Name: "Info", Class: "alert-info", id:6 },
        { Name: "Light", Class: "alert-light", id:7 },
        { Name: "Dark", Class: "alert-dark", id:8 }
    ];


    $(document).ready(function () {

        InitGrids();

    });

    function InitGrids()
    {
        CreateHtmlJsGrid("EmpStatus", function (retHtml) {
                $(".TableEmpStatus").html(retHtml);
                var param = {};
                param.StatusType = 1;

                var Options = {};
                Options.Name = $("#TableEmpStatus");
                Options.Url = "@Url.Action("GetStatusList", "AdminOperation")";
                Options.LoadParam = param;
                Options.Data = [];
                Options.Fields = [
                    { name: "STATUS_NAME", title: "Status", type: "text", width: "150", validate: "required" },
                    {
                        align: "center", name: "DISPLAY_CLASS", title: "Display Class", type: "select", items: Classes, valueField: "Class", textField: "Name", width: "50",
                        itemTemplate: function (_, item) {

                            if (IsUndefinedOrNullOrEmpty(item.DISPLAY_CLASS) == false)
                            {
                                var cssClass = item.DISPLAY_CLASS.replace("alert-", "");
                                var Upper = cssClass.charAt(0).toUpperCase() + cssClass.slice(1);

                                return $("<div class='alert " + item.DISPLAY_CLASS + " role='alert' style='font-size: small'>").html(Upper);
                            }
                        }
                    },
                    { name: "IS_CANCELED", title: "Cancelled", type: "checkbox", width: "50" },
                    {
                        type: "control", modeSwitchButton: false, width: "50", align: "center",
                        itemTemplate: function (_, item) {

                            var $result = jsGrid.fields.control.prototype.itemTemplate.apply(this, arguments);

                            var create = IsUndefinedOrNullOrEmpty(item.CREATION_DATE) ? "" : item.CREATION_DATE;
                            var modified = IsUndefinedOrNullOrEmpty(item.MODIFIED_DATE) ? "" : item.MODIFIED_DATE;
                            var createBy = IsUndefinedOrNullOrEmpty(item.CREATE_BY) ? "@HttpContext.Current.User.Identity.Name" : item.CREATE_BY;

                            var element = "<i class='fas fa-info-circle mx-1' data-toggle='tooltip'  style='font-size: large;' title='Create By:" + createBy + "<br/> Create:" + create + " <br/> Modified:" + modified + "'></i>";

                            return $result.add(element);
                        }
                    }
                ]

                CreateJsGrid(Options, function (retGrid) {
                    t1 = retGrid.Grid;
                    
                });

        });

        CreateHtmlJsGrid("Title", function (retHtml) {
                $(".TableTitle").html(retHtml);

                var Options = {};
                Options.Name = $("#TableTitle");
                Options.Url = "@Url.Action("GetTitleList", "AdminOperation")";
                Options.Data = [];
                 Options.Fields = [
                        { name: "TITLE_NAME", title: "Title", type: "text", width: "150", validate: "required" },
                        { name: "IS_CANCELED", title: "Cancelled", type: "checkbox", width: "50"},
                        {
                              type: "control", modeSwitchButton: false, width: "50", align: "center",
                              itemTemplate: function (_, item) {

                                var $result = jsGrid.fields.control.prototype.itemTemplate.apply(this, arguments);

                                var create = IsUndefinedOrNullOrEmpty(item.CREATION_DATE) ? "" : item.CREATION_DATE;
                                var modified = IsUndefinedOrNullOrEmpty(item.MODIFIED_DATE) ? "" : item.MODIFIED_DATE;
                                var createBy = IsUndefinedOrNullOrEmpty(item.CREATE_BY) ? "@HttpContext.Current.User.Identity.Name" : item.CREATE_BY;

                                  var element = "<i class='fas fa-info-circle mx-1' data-toggle='tooltip'  style='font-size: large;' title='Create By:" + createBy + "<br/> Create:" + create + " <br/> Modified:" + modified + "'></i>";

                                return $result.add(element);
                            }
                        }
                    ]

                CreateJsGrid(Options, function (retGrid) {
                    t2 = retGrid.Grid;                    
               
                });
        });

    }


    function OnAddNewItem(args)
    {
        showHideLoader(true);
        var _url;
        var grid;

        var Active = $('#ViewTabs a.active').attr("href");
        if (Active == "#EmpStatus")
        {
            args.item.STATUS_ID = args.item.STATUS_ID == null ? -1 : args.item.STATUS_ID;
            args.item.STATUS_TYPE = 1;
            _url = '@Url.Action("AddOrUpdateStatus", "AdminOperation")';
            grid = t1;
        }
        else
        {
            args.item.TITLE_ID = args.item.TITLE_ID == null ? -1 : args.item.TITLE_ID;
            _url = '@Url.Action("AddOrUpdateTitle", "AdminOperation")';
            grid = t2;
        }

        $.ajax({
            url: _url,
            type: 'POST',
            data: JSON.stringify(args.item),
            contentType: "application/json; charset=utf-8",
            success: function (retdata) {

                if (IsUndefinedOrNullOrEmpty(retdata) == false && retdata.success) {
                    grid.jsGrid("loadData");
                }

                if (IsUndefinedOrNullOrEmpty(retdata.Message) == false) {
                    if (retdata.success) {
                        toastr.success(retdata.Message);
                    }
                    else {
                        toastr.error(retdata.Message);
                    }
                }


                showHideLoader(false);
            }
        });
    }

    function OnDeleteITem(args)
    {
        showHideLoader(true);

        var _url;
        var grid;

        if ($('.nav-tabs li.active a').attr("href") == "#EmpStatus")
        {
            _url = '@Url.Action("RemoveStatus", "AdminOperation")';
            grid = t1;
        }
        else
        {
            _url = '@Url.Action("RemoveTitle", "AdminOperation")';
            grid = t2;
        }

        $.ajax({
            url: _url,
            type: 'POST',
            data: JSON.stringify(args.item),
            contentType: "application/json; charset=utf-8",
            success: function (retdata) {

                if (IsUndefinedOrNullOrEmpty(retdata) == false && retdata.success)
                {
                    grid.jsGrid("loadData");
                }

                if (IsUndefinedOrNullOrEmpty(retdata.Message) == false) {
                    if (retdata.success) {
                        toastr.success(retdata.Message);
                    }
                    else {
                        toastr.error(retdata.Message);
                    }
                }


                showHideLoader(false);
            }
        });
    }


    function AddGrid(obj) {
        var Active = $('#ViewTabs a.active').attr("href");
        var grid = Active == "#EmpStatus" ? t1 : t2;

        $(obj.children).toggleClass('active')
        grid.jsGrid("option", "inserting", $(obj.children).hasClass('active'));
    };


    function SearchGrid(obj)
    {
        var Active = $('#ViewTabs a.active').attr("href");
        var grid = Active == "#EmpStatus" ? t1 : t2;

        $(obj.children).toggleClass('active')
        grid.jsGrid("option", "filtering", $(obj.children).hasClass('active'));
    };


    function ChangeGrid(obj)
    {
        var Active = $('#ViewTabs a.active').attr("href");
        var grid = Active == "#EmpStatus" ? t1 : t2;
        var size = parseInt(obj.value, 10);

        grid.jsGrid("option", "pageSize", size);
    };

    function RefreshGrid(obj) {
        var grid = $('#ViewTabs a.active').attr("href") == "#EmpStatus" ? t1 : t2;

        grid.jsGrid("loadData");
    }

</script>